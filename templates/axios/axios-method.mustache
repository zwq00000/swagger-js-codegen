

/**
* {{&methodName}} {{&summary}}
{{#parameters}}{{^isSingleton}}
* @param {{#type}}{{=<% %>=}}{<%&type%>}<%={{ }}=%>{{/type}} {{^type}}{object}{{/type}} {{&camelCaseName}} @description {{&description}}
{{/isSingleton}}{{/parameters}}
* @returns axios.{{#lower}}{{&method}}{{/lower}} Promission
*/
const {{&methodName}} = function({{#join}}{{#parameters}}{{#default}}{{&camelCaseName}} = {{&default}},{{/default}}{{^default}}{{&camelCaseName}},{{/default}}{{/parameters}}{{/join}}){
    let path = `{{&path}}`;
{{#params}}
    let params = {};
{{#parameters}}{{^isPathParameter}}
{{#default}}
    params['{{&camelCaseName}}'] = typeof {{&camelCaseName}} !== 'undefined' ? {{&camelCaseName}}: {{&default}};
{{/default}}
{{^default}}
    params['{{&camelCaseName}}'] = {{&camelCaseName}};
{{/default}}
{{#required}}
    if(!params['{{&camelCaseName}}']){
        throw 'required argument {{&camelCaseName}}'
    }
{{/required}}
{{/isPathParameter}}{{/parameters}}

    return axios.{{#lower}}{{&method}}{{/lower}}(path,{params})
    {{/params}}
    {{^params}}
    return axios.{{#lower}}{{&method}}{{/lower}}(path)
    {{/params}}
}