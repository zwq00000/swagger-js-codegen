


/**
* {{&methodName}} {{&summary}}
{{#parameters}}{{^isSingleton}}
* @param {{#type}}{{=<% %>=}}{<%&type%>}<%={{ }}=%>{{/type}} {{^type}}{object}{{/type}} {{&camelCaseName}} @description {{&description}}
{{/isSingleton}}{{/parameters}}
* @returns axios.{{#lower}}{{&method}}{{/lower}} Promission
*/
const {{&methodName}} = function({{params}}){
    let path = '{{&path}}';
    {{#params}}
    let params = {};
        {{#parameters}}{{^isPathParameter}}
        {{#default}}
            params['{{&name}}'] = typeof {{&camelCaseName}} !== 'undefined' ? {{&camelCaseName}}: {{&default}};
        {{/default}}
        {{^default}}
            params['{{&name}}'] = {{&camelCaseName}}
        {{/default}}
        {{/isPathParameter}}{{/parameters}}
    return fetch.{{#lower}}{{&method}}{{/lower}}(path,params);
    {{/params}}
    {{^params}}
    return fetch.{{#lower}}{{&method}}{{/lower}}(path);
    {{/params}}
}